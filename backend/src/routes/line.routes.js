const express = require("express");
const router = express.Router();
const { pushText, verifyLineSignature } = require("../utils/line");

// ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ raw body ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö webhook ‡∏ô‡∏µ‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
router.post("/webhook", express.raw({ type: "application/json" }), async (req, res) => {
  try {
    const raw = req.body.toString("utf8");
    const sig = req.get("x-line-signature");
    if (!verifyLineSignature(sig, raw)) return res.status(401).send("invalid signature");

    const body = JSON.parse(raw);

    for (const ev of body.events || []) {
      // üü¢ log userId ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏≠‡∏≤‡πÑ‡∏õ‡πÉ‡∏ä‡πâ
      console.log("LINE event:", ev.type, "source:", ev.source);

      // ‡∏û‡∏¥‡∏°‡∏û‡πå "groupid" ‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡∏ï‡∏≠‡∏ö Group ID
      if (ev.type === "message" && ev.source?.type === "group" && ev.message?.type === "text") {
        if (ev.message.text.trim().toLowerCase() === "groupid") {
          await pushText(ev.source.groupId, `Group ID: ${ev.source.groupId}`);
        }
      }

      // ‡∏ó‡∏±‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏ö‡∏≠‡∏ó
      if (ev.type === "follow" && ev.source?.type === "user") {
        console.log("üë§ New follower userId:", ev.source.userId); // üü¢ log ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡∏î‡πâ‡∏ß‡∏¢
        await pushText(ev.source.userId, "‚úÖ ‡∏ö‡∏≠‡∏ó‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß");
      }

      // ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å log ‡∏ï‡∏≠‡∏ô‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß
      if (ev.type === "message" && ev.source?.type === "user") {
        console.log("üì© Message from userId:", ev.source.userId);
        console.log("‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°:", ev.message.text);
      }
    }

    res.json({ ok: true });
  } catch (e) {
    console.error(e);
    res.status(500).json({ ok: false, error: e.message });
  }
});
exports = module.exports = router;